//go:build !ignore_autogenerated

/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Authorization) DeepCopyInto(out *Authorization) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Authorization.
func (in *Authorization) DeepCopy() *Authorization {
	if in == nil {
		return nil
	}
	out := new(Authorization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuth) DeepCopyInto(out *BasicAuth) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuth.
func (in *BasicAuth) DeepCopy() *BasicAuth {
	if in == nil {
		return nil
	}
	out := new(BasicAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlackboxModule) DeepCopyInto(out *BlackboxModule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlackboxModule.
func (in *BlackboxModule) DeepCopy() *BlackboxModule {
	if in == nil {
		return nil
	}
	out := new(BlackboxModule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BlackboxModule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlackboxModuleList) DeepCopyInto(out *BlackboxModuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BlackboxModule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlackboxModuleList.
func (in *BlackboxModuleList) DeepCopy() *BlackboxModuleList {
	if in == nil {
		return nil
	}
	out := new(BlackboxModuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BlackboxModuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlackboxModuleSpec) DeepCopyInto(out *BlackboxModuleSpec) {
	*out = *in
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = new(HTTPProbe)
		(*in).DeepCopyInto(*out)
	}
	if in.TCP != nil {
		in, out := &in.TCP, &out.TCP
		*out = new(TCPProbe)
		(*in).DeepCopyInto(*out)
	}
	if in.ICMP != nil {
		in, out := &in.ICMP, &out.ICMP
		*out = new(ICMPProbe)
		(*in).DeepCopyInto(*out)
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = new(DNSProbe)
		(*in).DeepCopyInto(*out)
	}
	if in.GRPC != nil {
		in, out := &in.GRPC, &out.GRPC
		*out = new(GRPCProbe)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlackboxModuleSpec.
func (in *BlackboxModuleSpec) DeepCopy() *BlackboxModuleSpec {
	if in == nil {
		return nil
	}
	out := new(BlackboxModuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlackboxModuleStatus) DeepCopyInto(out *BlackboxModuleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlackboxModuleStatus.
func (in *BlackboxModuleStatus) DeepCopy() *BlackboxModuleStatus {
	if in == nil {
		return nil
	}
	out := new(BlackboxModuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSProbe) DeepCopyInto(out *DNSProbe) {
	*out = *in
	if in.ValidRCodes != nil {
		in, out := &in.ValidRCodes, &out.ValidRCodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ValidateAnswerRRs != nil {
		in, out := &in.ValidateAnswerRRs, &out.ValidateAnswerRRs
		*out = new(DNSValidateRR)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidateAuthorityRRs != nil {
		in, out := &in.ValidateAuthorityRRs, &out.ValidateAuthorityRRs
		*out = new(DNSValidateRR)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidateAdditionalRRs != nil {
		in, out := &in.ValidateAdditionalRRs, &out.ValidateAdditionalRRs
		*out = new(DNSValidateRR)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSProbe.
func (in *DNSProbe) DeepCopy() *DNSProbe {
	if in == nil {
		return nil
	}
	out := new(DNSProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSValidateRR) DeepCopyInto(out *DNSValidateRR) {
	*out = *in
	if in.FailIfMatchesRegexp != nil {
		in, out := &in.FailIfMatchesRegexp, &out.FailIfMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailIfNotMatchesRegexp != nil {
		in, out := &in.FailIfNotMatchesRegexp, &out.FailIfNotMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailIfAllMatchRegexp != nil {
		in, out := &in.FailIfAllMatchRegexp, &out.FailIfAllMatchRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailIfNoneMatchRegexp != nil {
		in, out := &in.FailIfNoneMatchRegexp, &out.FailIfNoneMatchRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSValidateRR.
func (in *DNSValidateRR) DeepCopy() *DNSValidateRR {
	if in == nil {
		return nil
	}
	out := new(DNSValidateRR)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GRPCProbe) DeepCopyInto(out *GRPCProbe) {
	*out = *in
	if in.IPProtocolFallback != nil {
		in, out := &in.IPProtocolFallback, &out.IPProtocolFallback
		*out = new(bool)
		**out = **in
	}
	if in.UseTLS != nil {
		in, out := &in.UseTLS, &out.UseTLS
		*out = new(bool)
		**out = **in
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GRPCProbe.
func (in *GRPCProbe) DeepCopy() *GRPCProbe {
	if in == nil {
		return nil
	}
	out := new(GRPCProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHeaderMatch) DeepCopyInto(out *HTTPHeaderMatch) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHeaderMatch.
func (in *HTTPHeaderMatch) DeepCopy() *HTTPHeaderMatch {
	if in == nil {
		return nil
	}
	out := new(HTTPHeaderMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPProbe) DeepCopyInto(out *HTTPProbe) {
	*out = *in
	if in.ValidStatusCodes != nil {
		in, out := &in.ValidStatusCodes, &out.ValidStatusCodes
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
	if in.ValidHTTPVersions != nil {
		in, out := &in.ValidHTTPVersions, &out.ValidHTTPVersions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.FailIfSSL != nil {
		in, out := &in.FailIfSSL, &out.FailIfSSL
		*out = new(bool)
		**out = **in
	}
	if in.FailIfNotSSL != nil {
		in, out := &in.FailIfNotSSL, &out.FailIfNotSSL
		*out = new(bool)
		**out = **in
	}
	if in.FailIfBodyMatchesRegexp != nil {
		in, out := &in.FailIfBodyMatchesRegexp, &out.FailIfBodyMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailIfBodyNotMatchesRegexp != nil {
		in, out := &in.FailIfBodyNotMatchesRegexp, &out.FailIfBodyNotMatchesRegexp
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailIfHeaderMatchesRegexp != nil {
		in, out := &in.FailIfHeaderMatchesRegexp, &out.FailIfHeaderMatchesRegexp
		*out = make([]HTTPHeaderMatch, len(*in))
		copy(*out, *in)
	}
	if in.FailIfHeaderNotMatchesRegexp != nil {
		in, out := &in.FailIfHeaderNotMatchesRegexp, &out.FailIfHeaderNotMatchesRegexp
		*out = make([]HTTPHeaderMatch, len(*in))
		copy(*out, *in)
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = new(BasicAuth)
		**out = **in
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(Authorization)
		**out = **in
	}
	if in.ProxyFromEnvironment != nil {
		in, out := &in.ProxyFromEnvironment, &out.ProxyFromEnvironment
		*out = new(bool)
		**out = **in
	}
	if in.ProxyConnectHeaders != nil {
		in, out := &in.ProxyConnectHeaders, &out.ProxyConnectHeaders
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SkipResolvePhaseWithProxy != nil {
		in, out := &in.SkipResolvePhaseWithProxy, &out.SkipResolvePhaseWithProxy
		*out = new(bool)
		**out = **in
	}
	if in.OAuth2 != nil {
		in, out := &in.OAuth2, &out.OAuth2
		*out = new(OAuth2Config)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocolFallback != nil {
		in, out := &in.IPProtocolFallback, &out.IPProtocolFallback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPProbe.
func (in *HTTPProbe) DeepCopy() *HTTPProbe {
	if in == nil {
		return nil
	}
	out := new(HTTPProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ICMPProbe) DeepCopyInto(out *ICMPProbe) {
	*out = *in
	if in.DontFragment != nil {
		in, out := &in.DontFragment, &out.DontFragment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ICMPProbe.
func (in *ICMPProbe) DeepCopy() *ICMPProbe {
	if in == nil {
		return nil
	}
	out := new(ICMPProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OAuth2Config) DeepCopyInto(out *OAuth2Config) {
	*out = *in
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EndpointParams != nil {
		in, out := &in.EndpointParams, &out.EndpointParams
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OAuth2Config.
func (in *OAuth2Config) DeepCopy() *OAuth2Config {
	if in == nil {
		return nil
	}
	out := new(OAuth2Config)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryResponseEntry) DeepCopyInto(out *QueryResponseEntry) {
	*out = *in
	if in.StartTLS != nil {
		in, out := &in.StartTLS, &out.StartTLS
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryResponseEntry.
func (in *QueryResponseEntry) DeepCopy() *QueryResponseEntry {
	if in == nil {
		return nil
	}
	out := new(QueryResponseEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPProbe) DeepCopyInto(out *TCPProbe) {
	*out = *in
	if in.QueryResponse != nil {
		in, out := &in.QueryResponse, &out.QueryResponse
		*out = make([]QueryResponseEntry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(bool)
		**out = **in
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPProbe.
func (in *TCPProbe) DeepCopy() *TCPProbe {
	if in == nil {
		return nil
	}
	out := new(TCPProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfig) DeepCopyInto(out *TLSConfig) {
	*out = *in
	if in.InsecureSkipVerify != nil {
		in, out := &in.InsecureSkipVerify, &out.InsecureSkipVerify
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfig.
func (in *TLSConfig) DeepCopy() *TLSConfig {
	if in == nil {
		return nil
	}
	out := new(TLSConfig)
	in.DeepCopyInto(out)
	return out
}
